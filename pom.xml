<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.acme</groupId>
  <artifactId>acme-person</artifactId>
  <version>1.0-SNAPSHOT</version>

  <parent>
    <groupId>io.bitbuild.poms</groupId>
    <artifactId>camel3-build-parent</artifactId>
    <version>0.2.16-SNAPSHOT</version>
  </parent>

  <distributionManagement>
    <repository>
      <id>releases-local</id>
      <url>${localReleaseURL}</url>
    </repository>

    <snapshotRepository>
      <id>snapshots-local</id>
      <url>${localSnapshotURL}</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <io.bitbuild.version>0.2.16-SNAPSHOT</io.bitbuild.version>
    <quarkus.package.type>fast-jar</quarkus.package.type>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-seda</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-direct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-xslt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-dataformat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-microprofile-health</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.quarkus</groupId>
      <artifactId>camel-quarkus-xml-io-dsl</artifactId>
    </dependency>

    <dependency>
      <groupId>io.bitbuild</groupId>
      <artifactId>quarkus-bootstrap</artifactId>
      <version>${io.bitbuild.version}</version>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <sources>
            <source>src/main/resources/xsd</source>
          </sources>
          <clearOutputDir>false</clearOutputDir>
        </configuration>
        <executions>
          <execution>
            <id>xjc</id>
            <goals>
              <goal>xjc</goal>
            </goals>
          </execution>
         </executions>
      </plugin>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <docker-file-tmpl>docker/Dockerfile.quarkus-app</docker-file-tmpl>
        <docker-file>target/classes/${docker-file-tmpl}</docker-file>
        <base-image>localhost/bitbuild-run-java:1.3</base-image>
        <container-registry>docker://image-registry.openshift-image-registry.svc:5000/middleware</container-registry>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <docker-file-tmpl>docker/Dockerfile.quarkus-app</docker-file-tmpl>
        <docker-file>target/classes/${docker-file-tmpl}</docker-file>
        <base-image>image-registry.openshift-image-registry.svc:5000/bitbuild/bitbuild-run-java:1.3</base-image>
        <container-registry>docker://image-registry.openshift-image-registry.svc:5000/middleware</container-registry>
      </properties>
    </profile>
    <profile>
      <id>oci-image</id>
      <properties>
        <buildah.image-name>${project.artifactId}:${project.version}</buildah.image-name>
        <buildah.dockerfile>${docker-file}</buildah.dockerfile>
        <buildah.tls-verify>false</buildah.tls-verify>
        <skopeo.dest-tls-verify>true</skopeo.dest-tls-verify>
        <skopeo.dest-registry>${container-registry}</skopeo.dest-registry>
      </properties>
      <build>
        <resources>
          <resource>
            <directory>src/main/resources</directory>
          </resource>
          <resource>
            <directory>${project.build.directory}/resource-templates-staging</directory>
            <filtering>true</filtering>
            <includes>
              <include>${docker-file-tmpl}</include>
            </includes>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-remote-resources-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
